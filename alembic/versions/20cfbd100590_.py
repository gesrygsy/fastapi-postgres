"""empty message

Revision ID: 20cfbd100590
Revises: 
Create Date: 2024-01-23 17:12:16.757416

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '20cfbd100590'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_currency_id', table_name='currency')
    op.drop_table('currency')
    op.drop_index('ix_accounts_id', table_name='accounts')
    op.drop_table('accounts')
    op.drop_table('dataset')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dataset',
    sa.Column('function', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('currency', 'commodity', 'etf', 'stock', 'bond', 'crypto', name='symboltype', create_type=False), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('data_source', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('function', name='dataset_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('role', postgresql.ENUM('admin', 'user', name='role', create_type=False), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('token', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('last_access', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key')
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_table('accounts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('account', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('server', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('owner_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('owner_email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('last_access', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['owner_email'], ['users.email'], name='accounts_owner_email_fkey'),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='accounts_owner_id_fkey'),
    sa.ForeignKeyConstraint(['owner_name'], ['users.username'], name='accounts_owner_name_fkey'),
    sa.PrimaryKeyConstraint('id', name='accounts_pkey')
    )
    op.create_index('ix_accounts_id', 'accounts', ['id'], unique=False)
    op.create_table('currency',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('open', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('high', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('low', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('close', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('volume', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dataset_function', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['dataset_function'], ['dataset.function'], name='currency_dataset_function_fkey'),
    sa.PrimaryKeyConstraint('id', name='currency_pkey')
    )
    op.create_index('ix_currency_id', 'currency', ['id'], unique=False)
    # ### end Alembic commands ###
